{% set libmamba_version = "0.23.1" %}
{% set libmambapy_version = "0.23.1" %}
{% set mamba_version = "0.23.1" %}
{% set release = "2022.05.11" %}


# NOTE FOR FUTURE PACKAGE BUILDERS/MAINTAINERS:
#
#   Currently, this package builds the same source twice. In future,
#   it should be modified to build it once and package each piece
#   independently.


package:
  name: libmambapy-split

source:
  url: https://github.com/mamba-org/mamba/archive/{{ release }}.tar.gz
  sha256: 10a9e15c29612de4bbaa89e39bcfd3558f1597e4c15a828216f0715d034ab737
  patches:
    # Fix some compilation issues.
    - patches/libmamba_CMakeLists.txt.patch
    - patches/libmamba_src_core_context.cpp.patch
    #- patches/libmamba_include_mamba_api_configuration_impl.hpp.patch
    #- patches/libmamba_src_core_output.cpp.patch
    #- patches/libmamba_include_mamba_core_progress_bar.hpp.patch  # [win]

build:
  number: 0

requirements:
  build:
    - patch     # [unix]
    - m2-patch  # [win]

outputs:
  - name: libmamba
    version: {{ libmamba_version }}
    script: build_libmamba.sh                     # [unix]
    script: bld_libmamba.bat                      # [win]
    build:
      run_exports:
        - {{ pin_subpackage('libmamba', max_pin='x.x') }}
      missing_dso_whitelist:  # [s390x]
        - $RPATH/ld64.so.1    # [s390x] Know s390x `ld64.so` issue.
      ignore_run_exports:
        - spdlog
    requirements:
      build:
        - {{ compiler('cxx') }}
        - cmake
        - ninja-base
      host:
        - libsolv >=0.7.19
        - libcurl
        - openssl
        - libarchive
        - nlohmann_json
        - cpp-filesystem >=1.5.8
        - cpp-expected
        - reproc >=14.2.1
        - reproc-cpp >=14.2.1
        - spdlog-fmt-embed
        - yaml-cpp
        - termcolor-cpp
        - cli11
        - winreg                                 # [win]
    test:
      commands:
        - test -d ${PREFIX}/include/mamba  # [unix]
        - test -f ${PREFIX}/include/mamba/version.hpp  # [unix]
        - test -f ${PREFIX}/lib/cmake/libmamba/libmambaConfig.cmake  # [unix]
        - test -f ${PREFIX}/lib/cmake/libmamba/libmambaConfigVersion.cmake  # [unix]
        - test -e ${PREFIX}/lib/libmamba${SHLIB_EXT}  # [unix]
        - if not exist %LIBRARY_PREFIX%\include\mamba\version.hpp (exit 1)  # [win]
        - if not exist %LIBRARY_PREFIX%\lib\cmake\libmamba\libmambaConfig.cmake (exit 1)  # [win]
        - if not exist %LIBRARY_PREFIX%\lib\cmake\libmamba\libmambaConfigVersion.cmake (exit 1)  # [win]
        - if not exist %LIBRARY_PREFIX%\bin\libmamba.dll (exit 1)  # [win]
        - if not exist %LIBRARY_PREFIX%\lib\libmamba.lib (exit 1)  # [win]
        {% set libmamba_version_split = libmamba_version.split('.') %}
        - cat $PREFIX/include/mamba/version.hpp | grep "LIBMAMBA_VERSION_MAJOR {{ libmamba_version_split[0] }}"  # [unix]
        - cat $PREFIX/include/mamba/version.hpp | grep "LIBMAMBA_VERSION_MINOR {{ libmamba_version_split[1] }}"  # [unix]
        - cat $PREFIX/include/mamba/version.hpp | grep "LIBMAMBA_VERSION_PATCH {{ libmamba_version_split[2] }}"  # [unix]

  - name: libmambapy
    version: {{ libmambapy_version }}
    script: build_libmambapy.sh                   # [unix]
    script: bld_libmambapy.bat                    # [win]
    build:
      skip: true  # [py<37]
      string: py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}
      run_exports:
        - {{ pin_subpackage('libmambapy', max_pin='x.x') }}
      missing_dso_whitelist:  # [s390x]
        - $RPATH/ld64.so.1    # [s390x] Know s390x `ld64.so` issue.
      ignore_run_exports:
        - spdlog
    requirements:
      build:
        - {{ compiler('cxx') }}
        - cmake
        - ninja-base
      host:
        - python
        - pip
        - setuptools
        - wheel
        - libsolv >=0.7.19
        - pybind11 >=2.2
        - cpp-filesystem >=1.5.8
        - cpp-expected
        - termcolor-cpp
        - nlohmann_json
        - cli11
        - winreg                                 # [win]
        - {{ pin_subpackage('libmamba', exact=True) }}
      run:
        - python
        - {{ pin_subpackage('libmamba', exact=True) }}

    test:
      imports:
        - libmambapy
        - libmambapy.bindings
      commands:
        - python -c "import libmambapy._version; assert libmambapy._version.__version__ == '{{ libmambapy_version }}'"


about:
  home: https://github.com/mamba-org/mamba
  license: BSD-3-Clause
  license_file:
    - LICENSE
    - CPP_FILESYSTEM_LICENSE.txt
  license_family: BSD
  summary: A fast drop-in alternative to conda, using libsolv for dependency resolution
  description: A fast drop-in alternative to conda, using libsolv for dependency resolution
  dev_url: https://github.com/mamba-org/mamba
  doc_url: https://mamba.readthedocs.io/en/latest/

extra:
  recipe-maintainers:
    - adriendelsalle
    - SylvainCorlay
    - JohanMabille
    - wolfv
    - ericmjl
